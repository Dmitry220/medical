{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041F\\u043E\\u0440\\u0442\\u0444\\u043E\\u043B\\u0438\\u043E\\\\medical-react\\\\medical\\\\src\\\\Components\\\\Page\\\\Contact\\\\Contact.js\";\nimport React from 'react';\nimport contact from './contact.module.css';\nimport { Link } from \"react-router-dom\";\nimport image_why from '../../../assets/img/replace image.jpg';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction validateEmail(value) {\n  let error;\n\n  if (!value) {\n    error = 'Required';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n    error = 'Invalid email address';\n  }\n\n  return error;\n}\n\nfunction validateUsername(value) {\n  let error;\n\n  if (value === 'admin') {\n    error = 'Nice try!';\n  }\n\n  return error;\n}\n\nexport const Contact = () => {\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: contact.page__contact + ' ' + contact.contact,\n    id: \"form\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: contact.contact__container,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: contact.conatct__title + \" title\",\n        children: \"Contact us\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          username: 'ti',\n          email: 't'\n        },\n        onSubmit: values => {\n          // same shape as initial values\n          console.log(values);\n        },\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          action: \"\",\n          className: contact.contact__form + \" form\",\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            name: \"username\",\n            className: contact.form__control,\n            placeholder: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            name: \"email\",\n            className: contact.form__control,\n            placeholder: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            name: \"text\",\n            className: contact.form__control,\n            placeholder: \"Subject\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            className: contact.form__control,\n            placeholder: \"Your message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            className: contact.form__btn,\n            value: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          email: '',\n          password: ''\n        },\n        validate: values => {\n          const errors = {};\n\n          if (!values.email) {\n            errors.email = 'Required';\n          } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n            errors.email = 'Invalid email address';\n          }\n\n          return errors;\n        },\n        onSubmit: (values, _ref) => {\n          let {\n            setSubmitting\n          } = _ref;\n          setTimeout(() => {\n            alert(JSON.stringify(values, null, 2));\n            setSubmitting(false);\n          }, 400);\n        },\n        children: _ref2 => {\n          let {\n            isSubmitting\n          } = _ref2;\n          return /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Field, {\n              type: \"email\",\n              name: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"email\",\n              component: \"div\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"password\",\n              name: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"password\",\n              component: \"div\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              disabled: isSubmitting,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 7\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 3\n  }, this);\n};\n_c = Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["D:/Портфолио/medical-react/medical/src/Components/Page/Contact/Contact.js"],"names":["React","contact","Link","image_why","Formik","Form","Field","ErrorMessage","validateEmail","value","error","test","validateUsername","Contact","page__contact","contact__container","conatct__title","username","email","values","console","log","contact__form","form__control","form__btn","password","errors","setSubmitting","setTimeout","alert","JSON","stringify","isSubmitting"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport contact from './contact.module.css'\r\nimport { Link } from \"react-router-dom\";\r\nimport image_why from '../../../assets/img/replace image.jpg'\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\n\r\nfunction validateEmail(value) {\r\n\tlet error;\r\n\tif (!value) {\r\n\t\terror = 'Required';\r\n\t} else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\r\n\t\terror = 'Invalid email address';\r\n\t}\r\n\treturn error;\r\n}\r\n\r\nfunction validateUsername(value) {\r\n\tlet error;\r\n\tif (value === 'admin') {\r\n\t\terror = 'Nice try!';\r\n\t}\r\n\treturn error;\r\n}\r\n\r\nexport const Contact = () => {\r\n\treturn (\r\n\t\t<section className={contact.page__contact + ' ' + contact.contact} id={\"form\"}>\r\n\t\t\t<div className={contact.contact__container}>\r\n\t\t\t\t<h2 className={contact.conatct__title + \" title\"}>Contact us</h2>\r\n\t\t\t\t<Formik\r\n\t\t\t\t\tinitialValues={{\r\n\t\t\t\t\t\tusername: 'ti',\r\n\t\t\t\t\t\temail: 't',\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonSubmit={values => {\r\n\t\t\t\t\t\t// same shape as initial values\r\n\t\t\t\t\t\tconsole.log(values);\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Form action=\"\" className={contact.contact__form + \" form\"}>\r\n\t\t\t\t\t\t<Field name=\"username\" className={contact.form__control} placeholder=\"Email\" />\r\n\t\t\t\t\t\t<Field name=\"email\" className={contact.form__control} placeholder=\"Name\" />\r\n\t\t\t\t\t\t<Field name=\"text\" className={contact.form__control} placeholder=\"Subject\" />\r\n\t\t\t\t\t\t<Field className={contact.form__control} placeholder=\"Your message\" />\r\n\r\n\t\t\t\t\t\t<input type=\"submit\" className={contact.form__btn} value=\"Submit\" />\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</Formik>\r\n\t\t\t\t<Formik\r\n\t\t\t\t\tinitialValues={{ email: '', password: '' }}\r\n\t\t\t\t\tvalidate={values => {\r\n\t\t\t\t\t\tconst errors = {};\r\n\t\t\t\t\t\tif (!values.email) {\r\n\t\t\t\t\t\t\terrors.email = 'Required';\r\n\t\t\t\t\t\t} else if (\r\n\t\t\t\t\t\t\t!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\terrors.email = 'Invalid email address';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn errors;\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonSubmit={(values, { setSubmitting }) => {\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\talert(JSON.stringify(values, null, 2));\r\n\t\t\t\t\t\t\tsetSubmitting(false);\r\n\t\t\t\t\t\t}, 400);\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{({ isSubmitting }) => (\r\n\t\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t\t<Field type=\"email\" name=\"email\" />\r\n\t\t\t\t\t\t\t<ErrorMessage name=\"email\" component=\"div\" />\r\n\t\t\t\t\t\t\t<Field type=\"password\" name=\"password\" />\r\n\t\t\t\t\t\t\t<ErrorMessage name=\"password\" component=\"div\" />\r\n\t\t\t\t\t\t\t<button type=\"submit\" disabled={isSubmitting}>\r\n\t\t\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Formik>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}