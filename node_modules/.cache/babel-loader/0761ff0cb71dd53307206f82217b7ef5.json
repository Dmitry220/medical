{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041F\\u043E\\u0440\\u0442\\u0444\\u043E\\u043B\\u0438\\u043E\\\\medical-react\\\\medical\\\\src\\\\Components\\\\Page\\\\Contact\\\\Contact.js\";\nimport React from 'react';\nimport contact from './contact.module.css';\nimport { Link } from \"react-router-dom\";\nimport image_why from '../../../assets/img/replace image.jpg';\nimport { Formik, Form, Field } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst validateEmail = value => {\n  let error;\n\n  if (!value) {\n    error = 'Required';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n    error = 'Invalid email address';\n  }\n\n  return error;\n};\n\nconst validateText = value => {\n  let error;\n  if (!value) error = 'Required';\n  return error;\n};\n\nconst submit = async values => {\n  await new Promise(r => setTimeout(r, 500));\n  alert(JSON.stringify(values, null, 5));\n};\n\nexport const Contact = () => {\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: contact.page__contact + ' ' + contact.contact,\n    id: \"form\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: contact.contact__container,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: contact.conatct__title + \" title\",\n        children: \"Contact us\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          email: '',\n          username: '',\n          subject: '',\n          message: ''\n        },\n        onSubmit: submit,\n        children: _ref => {\n          let {\n            errors,\n            touched,\n            isValidating\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(Form, {\n            className: contact.contact__form + \" form\",\n            children: [/*#__PURE__*/_jsxDEV(Field, {\n              type: \"email\",\n              name: \"email\",\n              className: contact.form__control,\n              placeholder: \"Email\",\n              validate: validateEmail\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 8\n            }, this), errors.email && touched.email && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: contact.form__textError,\n              children: errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 42\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              name: \"username\",\n              className: contact.form__control,\n              placeholder: \"Name\",\n              validate: validateText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 8\n            }, this), errors.username && touched.username && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: contact.form__textError,\n              children: errors.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 48\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              name: \"subject\",\n              className: contact.form__control,\n              placeholder: \"Subject\",\n              validate: validateText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 8\n            }, this), errors.subject && touched.subject && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: contact.form__textError,\n              children: errors.subject\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 46\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              as: TextArea,\n              name: \"message\",\n              placeholder: \"Your message\",\n              validate: validateText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 8\n            }, this), errors.message && touched.message && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: contact.form__textError,\n              children: errors.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 46\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: contact.form__btn,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 7\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 3\n  }, this);\n};\n_c = Contact;\n\nconst TextArea = props => /*#__PURE__*/_jsxDEV(\"textarea\", {\n  className: contact.form__control + ' ' + contact.form__control_textarea,\n  ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 57,\n  columnNumber: 2\n}, this);\n\n_c2 = TextArea;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Contact\");\n$RefreshReg$(_c2, \"TextArea\");","map":{"version":3,"sources":["D:/Портфолио/medical-react/medical/src/Components/Page/Contact/Contact.js"],"names":["React","contact","Link","image_why","Formik","Form","Field","validateEmail","value","error","test","validateText","submit","values","Promise","r","setTimeout","alert","JSON","stringify","Contact","page__contact","contact__container","conatct__title","email","username","subject","message","errors","touched","isValidating","contact__form","form__control","form__textError","TextArea","form__btn","props","form__control_textarea"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport contact from './contact.module.css'\r\nimport { Link } from \"react-router-dom\";\r\nimport image_why from '../../../assets/img/replace image.jpg'\r\nimport { Formik, Form, Field } from 'formik';\r\n\r\nconst validateEmail = value => {\r\n\tlet error;\r\n\tif (!value) {\r\n\t\terror = 'Required';\r\n\t} else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\r\n\t\terror = 'Invalid email address';\r\n\t}\r\n\treturn error;\r\n}\r\n\r\nconst validateText = value => {\r\n\tlet error;\r\n\tif (!value) error = 'Required';\r\n\r\n\treturn error;\r\n}\r\nconst submit = async (values) => {\r\n\tawait new Promise((r) => setTimeout(r, 500));\r\n\talert(JSON.stringify(values, null, 5));\r\n}\r\n\r\nexport const Contact = () => {\r\n\treturn (\r\n\t\t<section className={contact.page__contact + ' ' + contact.contact} id={\"form\"}>\r\n\t\t\t<div className={contact.contact__container}>\r\n\t\t\t\t<h2 className={contact.conatct__title + \" title\"}>Contact us</h2>\r\n\t\t\t\t<Formik\r\n\t\t\t\t\tinitialValues={{ email: '', username: '', subject: '', message: '' }}\r\n\t\t\t\t\tonSubmit={submit}\r\n\t\t\t\t>\r\n\t\t\t\t\t{({ errors, touched, isValidating }) => (\r\n\t\t\t\t\t\t<Form className={contact.contact__form + \" form\"}>\r\n\t\t\t\t\t\t\t<Field type=\"email\" name=\"email\" className={contact.form__control} placeholder=\"Email\" validate={validateEmail} />\r\n\t\t\t\t\t\t\t{errors.email && touched.email && <div className={contact.form__textError}>{errors.email}</div>}\r\n\t\t\t\t\t\t\t<Field name=\"username\" className={contact.form__control} placeholder=\"Name\" validate={validateText} />\r\n\t\t\t\t\t\t\t{errors.username && touched.username && <div className={contact.form__textError}>{errors.username}</div>}\r\n\t\t\t\t\t\t\t<Field name=\"subject\" className={contact.form__control} placeholder=\"Subject\" validate={validateText} />\r\n\t\t\t\t\t\t\t{errors.subject && touched.subject && <div className={contact.form__textError}>{errors.subject}</div>}\r\n\t\t\t\t\t\t\t<Field as={TextArea} name=\"message\" placeholder=\"Your message\" validate={validateText} />\r\n\t\t\t\t\t\t\t{errors.message && touched.message && <div className={contact.form__textError}>{errors.message}</div>}\r\n\t\t\t\t\t\t\t<button type=\"submit\" className={contact.form__btn}>Submit</button>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Formik>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nconst TextArea = (props) => (\r\n\t<textarea className={contact.form__control + ' ' + contact.form__control_textarea} {...props} />\r\n);"]},"metadata":{},"sourceType":"module"}