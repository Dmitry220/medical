{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041F\\u043E\\u0440\\u0442\\u0444\\u043E\\u043B\\u0438\\u043E\\\\medical-react\\\\medical\\\\src\\\\Components\\\\Page\\\\Contact\\\\Contact.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport contact from './contact.module.css';\nimport { Formik, Form, Field } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst validateEmail = value => {\n  let error;\n\n  if (!value) {\n    error = 'Required';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n    error = 'Invalid email address';\n  }\n\n  return error;\n};\n\nconst validateText = value => {\n  let error;\n  if (!value) error = 'Required';\n  return error;\n};\n\nconst submit = async values => {\n  await new Promise(r => setTimeout(r, 500));\n  alert(JSON.stringify(values, null, 5));\n};\n\nexport const Contact = () => {\n  _s();\n\n  const darkTheme = useContext(ThemeContext);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: contact.page__contact + ' ' + contact.contact,\n    id: \"form\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: contact.contact__container,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: contact.conatct__title + \" title\",\n        children: \"Contact us\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ContactForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Contact, \"Mo22GSfXelJ8GtkkcHviyS+wIpg=\");\n\n_c = Contact;\n\nconst TextArea = props => /*#__PURE__*/_jsxDEV(\"textarea\", {\n  className: contact.form__control + ' ' + contact.form__control_textarea,\n  ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 41,\n  columnNumber: 2\n}, this);\n\n_c2 = TextArea;\n\nconst ContactForm = () => {\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      email: '',\n      username: '',\n      subject: '',\n      message: ''\n    },\n    onSubmit: submit,\n    children: _ref => {\n      let {\n        errors,\n        touched,\n        isValidating\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(Form, {\n        className: contact.contact__form + \" form\",\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          type: \"email\",\n          name: \"email\",\n          className: contact.form__control,\n          placeholder: \"Email\",\n          validate: validateEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 6\n        }, this), errors.email && touched.email && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: contact.form__textError,\n          children: errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 40\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"username\",\n          className: contact.form__control,\n          placeholder: \"Name\",\n          validate: validateText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 6\n        }, this), errors.username && touched.username && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: contact.form__textError,\n          children: errors.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 46\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"subject\",\n          className: contact.form__control,\n          placeholder: \"Subject\",\n          validate: validateText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 6\n        }, this), errors.subject && touched.subject && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: contact.form__textError,\n          children: errors.subject\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 44\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          as: TextArea,\n          name: \"message\",\n          placeholder: \"Your message\",\n          validate: validateText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 6\n        }, this), errors.message && touched.message && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: contact.form__textError,\n          children: errors.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 44\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: contact.form__btn,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 3\n  }, this);\n};\n\n_c3 = ContactForm;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Contact\");\n$RefreshReg$(_c2, \"TextArea\");\n$RefreshReg$(_c3, \"ContactForm\");","map":{"version":3,"sources":["D:/Портфолио/medical-react/medical/src/Components/Page/Contact/Contact.js"],"names":["React","contact","Formik","Form","Field","validateEmail","value","error","test","validateText","submit","values","Promise","r","setTimeout","alert","JSON","stringify","Contact","darkTheme","useContext","ThemeContext","page__contact","contact__container","conatct__title","TextArea","props","form__control","form__control_textarea","ContactForm","email","username","subject","message","errors","touched","isValidating","contact__form","form__textError","form__btn"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport contact from './contact.module.css'\r\nimport { Formik, Form, Field } from 'formik';\r\n\r\nconst validateEmail = value => {\r\n\tlet error;\r\n\tif (!value) {\r\n\t\terror = 'Required';\r\n\t} else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\r\n\t\terror = 'Invalid email address';\r\n\t}\r\n\treturn error;\r\n}\r\n\r\nconst validateText = value => {\r\n\tlet error;\r\n\tif (!value) error = 'Required';\r\n\r\n\treturn error;\r\n}\r\n\r\nconst submit = async (values) => {\r\n\tawait new Promise((r) => setTimeout(r, 500));\r\n\talert(JSON.stringify(values, null, 5));\r\n}\r\n\r\nexport const Contact = () => {\r\n\r\n\tconst darkTheme = useContext(ThemeContext);\r\n\treturn (\r\n\t\t<section className={contact.page__contact + ' ' + contact.contact} id={\"form\"}>\r\n\t\t\t<div className={contact.contact__container}>\r\n\t\t\t\t<h2 className={contact.conatct__title + \" title\"}>Contact us</h2>\r\n\t\t\t\t\t<ContactForm />\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nconst TextArea = (props) => (\r\n\t<textarea className={contact.form__control + ' ' + contact.form__control_textarea} {...props} />\r\n);\r\n\r\nconst ContactForm = () => {\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tinitialValues={{ email: '', username: '', subject: '', message: '' }}\r\n\t\t\tonSubmit={submit}\r\n\t\t>\r\n\t\t\t{({ errors, touched, isValidating }) => (\r\n\t\t\t\t<Form className={contact.contact__form + \" form\"}>\r\n\t\t\t\t\t<Field type=\"email\" name=\"email\" className={contact.form__control} placeholder=\"Email\" validate={validateEmail} />\r\n\t\t\t\t\t{errors.email && touched.email && <div className={contact.form__textError}>{errors.email}</div>}\r\n\t\t\t\t\t<Field name=\"username\" className={contact.form__control} placeholder=\"Name\" validate={validateText} />\r\n\t\t\t\t\t{errors.username && touched.username && <div className={contact.form__textError}>{errors.username}</div>}\r\n\t\t\t\t\t<Field name=\"subject\" className={contact.form__control} placeholder=\"Subject\" validate={validateText} />\r\n\t\t\t\t\t{errors.subject && touched.subject && <div className={contact.form__textError}>{errors.subject}</div>}\r\n\t\t\t\t\t<Field as={TextArea} name=\"message\" placeholder=\"Your message\" validate={validateText} />\r\n\t\t\t\t\t{errors.message && touched.message && <div className={contact.form__textError}>{errors.message}</div>}\r\n\t\t\t\t\t<button type=\"submit\" className={contact.form__btn}>Submit</button>\r\n\t\t\t\t</Form>\r\n\t\t\t)}\r\n\t\t</Formik>\r\n\t)\r\n}"]},"metadata":{},"sourceType":"module"}