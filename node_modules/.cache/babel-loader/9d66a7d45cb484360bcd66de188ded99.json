{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041F\\u043E\\u0440\\u0442\\u0444\\u043E\\u043B\\u0438\\u043E\\\\medical-react\\\\medical\\\\src\\\\Components\\\\Page\\\\Contact\\\\Contact.js\";\nimport React from 'react';\nimport contact from './contact.module.css';\nimport { Link } from \"react-router-dom\";\nimport image_why from '../../../assets/img/replace image.jpg';\nimport { Formik, Form, Field } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction validateEmail(value) {\n  let error;\n\n  if (!value) {\n    error = 'Required';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n    error = 'Invalid email address';\n  }\n\n  return error;\n}\n\nfunction validateUsername(value) {\n  let error;\n\n  if (value === 'admin') {\n    error = 'Nice try!';\n  }\n\n  return error;\n}\n\nexport const Contact = () => {\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: contact.page__contact + ' ' + contact.contact,\n    id: \"form\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: contact.contact__container,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: contact.conatct__title + \" title\",\n        children: \"Contact us\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          username: 'ti',\n          email: 't'\n        },\n        onSubmit: values => {\n          // same shape as initial values\n          console.log(values);\n        },\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          action: \"\",\n          className: contact.contact__form + \" form\",\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            namn: \"text\",\n            className: contact.form__control,\n            placeholder: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"email\",\n            className: contact.form__control,\n            placeholder: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            namn: \"text\",\n            className: contact.form__control,\n            placeholder: \"Subject\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            className: contact.form__control,\n            placeholder: \"Your message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            className: contact.form__btn,\n            value: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          username: 'ti',\n          email: 't'\n        },\n        onSubmit: values => {\n          // same shape as initial values\n          console.log(values);\n        },\n        children: _ref => {\n          let {\n            errors,\n            touched,\n            isValidating\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Field, {\n              name: \"email\",\n              validate: validateEmail\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 8\n            }, this), errors.email && touched.email && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 42\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              name: \"username\",\n              validate: validateUsername\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 8\n            }, this), errors.username && touched.username && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: errors.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 48\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 7\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 3\n  }, this);\n};\n_c = Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["D:/Портфолио/medical-react/medical/src/Components/Page/Contact/Contact.js"],"names":["React","contact","Link","image_why","Formik","Form","Field","validateEmail","value","error","test","validateUsername","Contact","page__contact","contact__container","conatct__title","username","email","values","console","log","contact__form","form__control","form__btn","errors","touched","isValidating"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport contact from './contact.module.css'\r\nimport { Link } from \"react-router-dom\";\r\nimport image_why from '../../../assets/img/replace image.jpg'\r\nimport { Formik, Form, Field } from 'formik';\r\n\r\nfunction validateEmail(value) {\r\n\tlet error;\r\n\tif (!value) {\r\n\t\terror = 'Required';\r\n\t} else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\r\n\t\terror = 'Invalid email address';\r\n\t}\r\n\treturn error;\r\n}\r\n\r\nfunction validateUsername(value) {\r\n\tlet error;\r\n\tif (value === 'admin') {\r\n\t\terror = 'Nice try!';\r\n\t}\r\n\treturn error;\r\n}\r\n\r\nexport const Contact = () => {\r\n\treturn (\r\n\t\t<section className={contact.page__contact + ' ' + contact.contact} id={\"form\"}>\r\n\t\t\t<div className={contact.contact__container}>\r\n\t\t\t\t<h2 className={contact.conatct__title + \" title\"}>Contact us</h2>\r\n\t\t\t\t<Formik\r\n\t\t\t\t\tinitialValues={{\r\n\t\t\t\t\t\tusername: 'ti',\r\n\t\t\t\t\t\temail: 't',\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonSubmit={values => {\r\n\t\t\t\t\t\t// same shape as initial values\r\n\t\t\t\t\t\tconsole.log(values);\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Form action=\"\" className={contact.contact__form + \" form\"}>\r\n\t\t\t\t\t\t<Field namn=\"text\" className={contact.form__control} placeholder=\"Email\" />\r\n\t\t\t\t\t\t<Field type=\"email\" className={contact.form__control} placeholder=\"Name\" />\r\n\t\t\t\t\t\t<Field namn=\"text\" className={contact.form__control} placeholder=\"Subject\" />\r\n\t\t\t\t\t\t<Field className={contact.form__control} placeholder=\"Your message\" />\r\n\r\n\t\t\t\t\t\t<input type=\"submit\" className={contact.form__btn} value=\"Submit\" />\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</Formik>\r\n\t\t\t\t<Formik\r\n\t\t\t\t\tinitialValues={{\r\n\t\t\t\t\t\tusername: 'ti',\r\n\t\t\t\t\t\temail: 't',\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonSubmit={values => {\r\n\t\t\t\t\t\t// same shape as initial values\r\n\t\t\t\t\t\tconsole.log(values);\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{({ errors, touched, isValidating }) => (\r\n\t\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t\t<Field name=\"email\" validate={validateEmail} />\r\n\t\t\t\t\t\t\t{errors.email && touched.email && <div>{errors.email}</div>}\r\n\r\n\t\t\t\t\t\t\t<Field name=\"username\" validate={validateUsername} />\r\n\t\t\t\t\t\t\t{errors.username && touched.username && <div>{errors.username}</div>}\r\n\r\n\t\t\t\t\t\t\t<button type=\"submit\">Submit</button>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Formik>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}