[{"D:\\Портфолио\\medical-react\\medical\\src\\index.js":"1","D:\\Портфолио\\medical-react\\medical\\src\\reportWebVitals.js":"2","D:\\Портфолио\\medical-react\\medical\\src\\App.js":"3","D:\\Портфолио\\medical-react\\medical\\src\\Components\\Header\\Header.js":"4","D:\\Портфолио\\medical-react\\medical\\src\\Components\\Page\\MainBlock\\Main.js":"5","D:\\Портфолио\\medical-react\\medical\\src\\Components\\Page\\Contact\\Contact.js":"6","D:\\Портфолио\\medical-react\\medical\\src\\Components\\Page\\Why\\Why.js":"7","D:\\Портфолио\\medical-react\\medical\\src\\Components\\Page\\Feature\\Feature.js":"8","D:\\Портфолио\\medical-react\\medical\\src\\Components\\Page\\Gallery\\Gallery.js":"9","D:\\Портфолио\\medical-react\\medical\\src\\Components\\Footer\\Footer.js":"10","D:\\Портфолио\\medical-react\\medical\\src\\Modal\\Modal.js":"11","D:\\Портфолио\\medical-react\\medical\\src\\Components\\Indicator\\Indicator.js":"12","D:\\Портфолио\\medical-react\\medical\\src\\Components\\Themes.js":"13","D:\\Портфолио\\medical-react\\medical\\src\\Components\\globalStyles.js":"14"},{"size":609,"mtime":1642616201454,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1642613537847,"results":"17","hashOfConfig":"16"},{"size":3472,"mtime":1642761664787,"results":"18","hashOfConfig":"16"},{"size":2425,"mtime":1642758154642,"results":"19","hashOfConfig":"16"},{"size":1204,"mtime":1642707481599,"results":"20","hashOfConfig":"16"},{"size":2252,"mtime":1642707340929,"results":"21","hashOfConfig":"16"},{"size":1338,"mtime":1642707452971,"results":"22","hashOfConfig":"16"},{"size":2284,"mtime":1642707365172,"results":"23","hashOfConfig":"16"},{"size":1364,"mtime":1642756891345,"results":"24","hashOfConfig":"16"},{"size":2155,"mtime":1642707508871,"results":"25","hashOfConfig":"16"},{"size":371,"mtime":1642672736665,"results":"26","hashOfConfig":"16"},{"size":476,"mtime":1642680143633,"results":"27","hashOfConfig":"16"},{"size":429,"mtime":1642707612680,"results":"28","hashOfConfig":"16"},{"size":1193,"mtime":1642757986598,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"ldrof",{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Портфолио\\medical-react\\medical\\src\\index.js",[],["61","62"],"D:\\Портфолио\\medical-react\\medical\\src\\reportWebVitals.js",[],"D:\\Портфолио\\medical-react\\medical\\src\\App.js",[],"D:\\Портфолио\\medical-react\\medical\\src\\Components\\Header\\Header.js",["63"],"import React, { useEffect } from 'react';\r\nimport header from './header.module.css'\r\nimport { Link } from \"react-router-dom\";\r\nimport AnchorLink from 'react-anchor-link-smooth-scroll'\r\n\r\nexport const Header = ({ themeToggler, burgerActive, setBurgerActive }) => {\r\n\r\n\tlet scrollPrev = 0;\r\n\t\r\n\tuseEffect(() => {\r\n\t\tconst onScroll = e => {\r\n\t\t\tlet scrolled = window.pageYOffset;\r\n\t\t\tif (scrolled > 100 && scrolled > scrollPrev) {\r\n\t\t\t\tdocument.querySelector(`.${header.header}`).classList.add(`${header.out}`);\r\n\t\t\t} else {\r\n\t\t\t\tdocument.querySelector(`.${header.header}`).classList.remove(`${header.out}`);\r\n\t\t\t}\r\n\t\t\tscrollPrev = scrolled;\r\n\t\t};\r\n\t\twindow.addEventListener(\"scroll\", onScroll);\r\n\t\treturn () => window.removeEventListener(\"scroll\", onScroll);\r\n\t}, [scrollPrev])\r\n\r\n\treturn (\r\n\t\t<header className={header.header}>\r\n\t\t\t<div className={header.header__container}>\r\n\t\t\t\t<div className={header.header__body}>\r\n\t\t\t\t\t<div className={header.header__column + ' ' + header.header__column_1}>\r\n\t\t\t\t\t\t<Link to=\"/\" className={header.header__logo}>Medical </Link>\r\n\t\t\t\t\t\t<div className={burgerActive ? header.header__burger + ' ' + header.active : header.header__burger} onClick={() => setBurgerActive(prev => !prev)}>\r\n\t\t\t\t\t\t\t<span></span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<nav className={burgerActive ? header.header__menu + ' ' + header.active : header.header__menu}>\r\n\t\t\t\t\t\t\t<ul className={header.header__list}>\r\n\t\t\t\t\t\t\t\t<li><Link to=\"\" className={header.header__link}>Home</Link></li>\r\n\t\t\t\t\t\t\t\t<li><Link to=\"\" className={header.header__link}>About us</Link></li>\r\n\t\t\t\t\t\t\t\t<li><Link to=\"\" className={header.header__link}>Services</Link></li>\r\n\t\t\t\t\t\t\t\t<li><Link to=\"\" className={header.header__link}>Portfolio</Link></li>\r\n\t\t\t\t\t\t\t\t<li><Link to=\"\" className={header.header__link}>Blog</Link></li>\r\n\t\t\t\t\t\t\t\t<li><Link to=\"\" className={header.header__link}>Contact</Link></li>\r\n\t\t\t\t\t\t\t\t<li className={header.themeCheck}><div className={header.header__link}>Темная тема</div>\r\n\t\t\t\t\t\t\t\t\t<label className={header.switch}>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" onChange={themeToggler} />\r\n\t\t\t\t\t\t\t\t\t\t<span className={header.slider + ' ' + header.round}></span>\r\n\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t</nav>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={header.header__column}>\r\n\t\t\t\t\t\t<AnchorLink href=\"#form\" className={header.header__btn + \" btn\"}>Get started</AnchorLink>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</header>\r\n\t);\r\n};\r\n","D:\\Портфолио\\medical-react\\medical\\src\\Components\\Page\\MainBlock\\Main.js",[],"D:\\Портфолио\\medical-react\\medical\\src\\Components\\Page\\Contact\\Contact.js",[],"D:\\Портфолио\\medical-react\\medical\\src\\Components\\Page\\Why\\Why.js",[],"D:\\Портфолио\\medical-react\\medical\\src\\Components\\Page\\Feature\\Feature.js",[],"D:\\Портфолио\\medical-react\\medical\\src\\Components\\Page\\Gallery\\Gallery.js",["64"],"import React, { useState } from 'react';\r\nimport galery from './gallery.module.css'\r\nimport { Link } from \"react-router-dom\";\r\nimport { Modal } from '../../../Modal/Modal';\r\n\r\nconst Gallery = () => {\r\n\r\n\t\r\n\tconst [modalActive, setModalActive] = useState(false)\r\n\tconst [modalImagePath, setModalImagePath] = useState('')\r\n\r\n\tconst importAll = r => {\r\n\t\tlet images = {};\r\n\t\tr.keys().map((item) => { images[item.replace('./', '')] = r(item); });\r\n\t\treturn images;\r\n\t}\r\n\r\n\tconst images = importAll(require.context('../../../assets/img/Gallery', false, /\\.(png|jpe?g|svg)$/));\r\n\r\n\tconst zoomImage = (path) => {\r\n\t\tsetModalActive(true);\r\n\t\tsetModalImagePath(path)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<section className={galery.page__gallery + ' gallery'}>\r\n\t\t\t<div className={galery.gallery__container + \" _container\"}>\r\n\t\t\t\t<div className={galery.gallery__body} >\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tObject.values(images).map(path => (\r\n\t\t\t\t\t\t\t<div className={galery.gallery_blockImage} key={path}>\r\n\t\t\t\t\t\t\t\t<Link to=\"#\" className={galery.gallery__image} onClick={() => zoomImage(path)}>\r\n\t\t\t\t\t\t\t\t\t<img src={path} alt={path} />\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t))\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t\t{<Modal active={modalActive} setActive={setModalActive}>\r\n\t\t\t\t\t<img src={modalImagePath} className={galery.gallery__modalImg} alt=\"\" />\r\n\t\t\t\t</Modal>}\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default Gallery;","D:\\Портфолио\\medical-react\\medical\\src\\Components\\Footer\\Footer.js",[],"D:\\Портфолио\\medical-react\\medical\\src\\Modal\\Modal.js",[],"D:\\Портфолио\\medical-react\\medical\\src\\Components\\Indicator\\Indicator.js",[],"D:\\Портфолио\\medical-react\\medical\\src\\Components\\Themes.js",[],"D:\\Портфолио\\medical-react\\medical\\src\\Components\\globalStyles.js",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":18,"column":17,"nodeType":"71","endLine":18,"endColumn":25},{"ruleId":"72","severity":1,"message":"73","line":14,"column":23,"nodeType":"74","messageId":"75","endLine":14,"endColumn":25},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"react-hooks/exhaustive-deps","Assignments to the 'scrollPrev' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Identifier","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]